var Query = require('../../lib/Query');

describe('Test chaining of queries', function(){
    it('should create new objects with "$where"', function(){
        // Create new sub-class
        var Crud = function(){
            Query.call(this);
        };
        // Cause it to extend Query
        Crud.prototype = Object.create(Query.prototype);
        Crud.prototype.constructor = Crud;

        // Create a new Crud
        var crud = new Crud();
        var query = crud.$where({sample: "query"});

        // Test
        expect( query.constructor ).toEqual( crud.constructor );
        expect( query.$where ).not.toEqual( undefined );
    });

    it("shouldn't chain user-created Queries", function(){
        var userCreatedQuery = new Query();
        var resultingQuery = userCreatedQuery.$where( {sample: "query"} );

        expect( resultingQuery ).not.toEqual( userCreatedQuery );
    });

    it('should chain other Queries', function(){
        var userCreatedQuery = new Query();
        var resultingQuery = userCreatedQuery.$where( {sample: "query"} );

        var chainedQuery = resultingQuery.$where( {another: "query"} );

        expect( chainedQuery ).toEqual( resultingQuery );
    });
});
