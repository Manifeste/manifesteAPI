/**
 * Class responsible for CRUD creation
 *
 * @class CRUDFactory
 * @constructor
 */


var _ = require('lodash');
var SetterFactory = require('./SetterFactory');
var defaultOps = require('./defaultOps');

var CRUDFactory = function(){};

/*
 * Return a CRUD manager
 *
 * @method crud
 *
 * @param {String} 				collName		Name of the collection to store new documents
 * @param {Object} 				config 			Configuration object
 * @param {MongoDB#Model}		config.DAO		Resource definition checked on creation
 * @param {Object}				config.defaults	Default fields
 * @param {Array<String>}		config.encrypt	List of fields that should be encrypted
 * @param {Object}				config.custom	Custom operations definition
 */
CRUDFactory.crud = function( config ){
	//
	// Operations settings
	//

	var ops = config.customOps ? _.clone( config.customOps ) : {};

	// Calculate array of operations
	_.defaults( ops, defaultOps );

	//
	// DB handling
	//

	// Define the collection DB
	var DAO = config.DAO;


	var crud = {};
	// Define a setter for each operation
	Object.defineProperties( crud, SetterFactory.create( ops, DAO, config ) );

	return crud;
};

exports = module.exports = CRUDFactory;
