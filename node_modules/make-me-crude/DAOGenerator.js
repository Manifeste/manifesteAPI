var Q = require('q');
var Joi = require('joi');
var Mongo = require('mongodb');
var ObjectID = Mongo.ObjectID;
var _ = require("underscore");

/*
 * Pseudo config object.
 * Added here as a reminder of what a config object should look like
 */
config = {
	db: "#MongoConnection", // DB connection to be used (required) - remove it?
	def: 'Mongoose#Schema', // Resource definition
	defaults: {}, // Default attributes
	encrypt: "Object.<String>", // Encrypted fields
	custom: { // Custom operations definition
		_name_: {
			handler: function(DAO, payload) { // Handler function
			},
			payload: Joi.object().keys({}) // Object validation [defaults to attr]
		}
	},
	delOperations: "Array.<String> || String", // CRUD operations that sould NOT be present
	subCrud: {  // Define a subCrud, ops accessible via [CRUD_object].[subCrud_name].[operation]
		name: , // Sub CRUD's name
		attribute: 'String', // Attribute to which assign the created variables [required, must be Object and must NOT be defined in "attr"]
		defaults: {}, // Default attributes
		encrypt: "Object.<String>", // Encrypted fields
		custom: { // Custom operations definition
			_name_: {
				handler: function(DAO, payload) { // Handler function
				},
				payload: Joi.object().keys({}) // Object validation [defaults to attr]
			}
		}
	}
};

/*
 * O que é pro Create:
 * 		attr (pra checar se bate)
 * 		defaults (pra adicionar antes)
 * 		encrypt (pra encriptar, duh)
 */

/*
 * Coisas que são pro Generator:
 * 		db (pra pegar o nome da coleção)
 * 		custom (pra adicionar no objeto que define ops)
 * 		delOperations (pra retirar do objeto que define ops)
 * 		subCrud (mais ou meeeenos mais ou menos mais ou menos)
 */


/*
 *
 */
